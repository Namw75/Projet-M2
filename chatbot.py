import sqlite3
import openai
import pandas as pd

# === Cl√© API OpenAI (test local) ===
client = openai.OpenAI(api_key="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")  # Remplace par ta vraie cl√©ts ta vraie cl√© ici

# === Connexion SQLite ===
conn = sqlite3.connect("bdd_clients.db")
cursor = conn.cursor()

# === Fonction GPT am√©lior√©e ===
def get_sql_from_gpt(user_query):
    prompt = f"""
Tu es un assistant SQL pour une base SQLite contenant deux tables :

1. `contacts` :
   - Nom, Pr√©nom, Email, Soci√©t√©, Domaine, Secteur d'activit√©, Poste, Linkedin, T√©l√©phone, Commentaire

2. `companies` :
   - Soci√©t√©

üß† COMPORTEMENTS ATTENDUS :

1. Si l'utilisateur veut ajouter un contact, utilise `INSERT INTO`.
2. Si l'utilisateur donne une nouvelle info sur un contact existant, utilise `UPDATE contacts SET ... WHERE ...`.
   - Identifie le contact avec `Pr√©nom`, `Nom`, et `Soci√©t√©` via `LOWER(...)`.
   - Mets √† jour uniquement la colonne concern√©e (ex: `T√©l√©phone`)
3. Si c‚Äôest une recherche ou un affichage, utilise `SELECT`.

‚ö†Ô∏è Ne retourne que la requ√™te SQL. Pas d‚Äôexplication.

Requ√™te utilisateur :
\"\"\"{user_query}\"\"\"
"""
    response = client.chat.completions.create(
        model="gpt-4",
        messages=[{"role": "user", "content": prompt}],
        temperature=0
    )
    return response.choices[0].message.content.strip()

# === Boucle principale ===
print("üí¨ Chatbot connect√©. Tape 'Hypeboy' pour quitter.")
while True:
    user_input = input("\nüì§ Question : ")
    if user_input.strip().lower() == "hypeboy":
        print("üëã √Ä la prochaine, killer.")
        break

    try:
        sql_query = get_sql_from_gpt(user_input)
        print(f"\nüí° Requ√™te SQL g√©n√©r√©e :\n{sql_query}")

        if sql_query.strip().lower().startswith("insert"):
            cursor.execute(sql_query)
            conn.commit()
            print("‚úÖ Contact ajout√© avec succ√®s.")
        else:
            result = pd.read_sql_query(sql_query, conn)
            print("\nüìä R√©sultat :")
            print(result.head(10).to_markdown())

    except Exception as e:
        print("‚ùå Erreur :", e)
